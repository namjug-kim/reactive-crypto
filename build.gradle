/*
 * Copyright 2019 namjug-kim
 *
 * LINE Corporation licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'java'

group 'com.njkimg.reactive-crypto'
version '0.3.1'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile 'com.github.jitpack:gradle-simple:1.1'
}

allprojects {
    version '0.3.1'

    apply plugin: 'jacoco'
}

subprojects {
    group 'com.njkimg.reactive-crypto'

    ext {
        reactorVersion = '3.4.5'
        kotlinJvmVersion = '1.3.21'
        log4j2Version = '2.12.0'
        slf4jVersion = '1.7.26'
    }

    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            // kotlin plugin
            classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: '1.3.50'
        }
    }

    apply plugin: 'java'

    repositories {
        mavenCentral()
        jcenter()
    }

    configurations {
        ktlint
    }

    dependencies {
        ktlint "com.pinterest:ktlint:0.34.0"
        // common
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

        // reactor
        implementation group: 'io.projectreactor', name: 'reactor-core', version: "${reactorVersion}"
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.61'

        // logging
        implementation group: 'io.github.microutils', name: 'kotlin-logging', version: '1.7.6'
        implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"

        compile group: 'io.projectreactor.kotlin', name: 'reactor-kotlin-extensions', version: '1.0.2.RELEASE'

        // test
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.assertj', name: 'assertj-core', version: '3.17.1'
        testCompile group: 'io.projectreactor', name: 'reactor-test', version: "${reactorVersion}"

        testRuntimeOnly group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${log4j2Version}"
        testRuntimeOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4j2Version}"
        testRuntimeOnly group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4j2Version}"
    }

    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        main = "com.pinterest.ktlint.Main"
        classpath = configurations.ktlint
        args "src/**/*.kt"
        // to generate report in checkstyle format prepend following args:
        // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
        // see https://github.com/pinterest/ktlint#usage for more
    }
    check.dependsOn ktlint

    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        main = "com.pinterest.ktlint.Main"
        classpath = configurations.ktlint
        args "-F", "src/**/*.kt"
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}
